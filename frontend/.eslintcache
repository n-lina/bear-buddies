[{"/Users/chui/Documents/test/bear-buddies/frontend/src/index.js":"1","/Users/chui/Documents/test/bear-buddies/frontend/src/reportWebVitals.js":"2","/Users/chui/Documents/test/bear-buddies/frontend/src/animations/bear.js":"3","/Users/chui/Documents/test/bear-buddies/frontend/src/components/App.jsx":"4","/Users/chui/Documents/test/bear-buddies/frontend/src/firebase.js":"5","/Users/chui/Documents/test/bear-buddies/frontend/src/components/PrivateRoute.js":"6","/Users/chui/Documents/test/bear-buddies/frontend/src/components/PublicRoute.js":"7","/Users/chui/Documents/test/bear-buddies/frontend/src/models/RootStoreContext.js":"8","/Users/chui/Documents/test/bear-buddies/frontend/src/models/RootStore.js":"9","/Users/chui/Documents/test/bear-buddies/frontend/src/pages/SignIn.js":"10","/Users/chui/Documents/test/bear-buddies/frontend/src/pages/SignUp.js":"11","/Users/chui/Documents/test/bear-buddies/frontend/src/pages/index.js":"12","/Users/chui/Documents/test/bear-buddies/frontend/src/models/Template.js":"13","/Users/chui/Documents/test/bear-buddies/frontend/src/pages/landing.js":"14","/Users/chui/Documents/test/bear-buddies/frontend/src/pages/mainPage.js":"15","/Users/chui/Documents/test/bear-buddies/frontend/src/components/Logout.js":"16"},{"size":571,"mtime":1610250125560,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1610250125562,"results":"19","hashOfConfig":"18"},{"size":34122,"mtime":1610308386129,"results":"20","hashOfConfig":"18"},{"size":1845,"mtime":1610308386136,"results":"21","hashOfConfig":"18"},{"size":685,"mtime":1610250125560,"results":"22","hashOfConfig":"18"},{"size":502,"mtime":1610250125560,"results":"23","hashOfConfig":"18"},{"size":495,"mtime":1610250125560,"results":"24","hashOfConfig":"18"},{"size":1128,"mtime":1610250125561,"results":"25","hashOfConfig":"18"},{"size":255,"mtime":1610250125561,"results":"26","hashOfConfig":"18"},{"size":3916,"mtime":1610308386137,"results":"27","hashOfConfig":"18"},{"size":4453,"mtime":1610308386137,"results":"28","hashOfConfig":"18"},{"size":1121,"mtime":1610308386137,"results":"29","hashOfConfig":"18"},{"size":4462,"mtime":1610309806674,"results":"30","hashOfConfig":"18"},{"size":576,"mtime":1610308386138,"results":"31","hashOfConfig":"18"},{"size":14658,"mtime":1610309806675,"results":"32","hashOfConfig":"18"},{"size":420,"mtime":1610308386136,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"whcnul",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/chui/Documents/test/bear-buddies/frontend/src/index.js",["73"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport Bear from './animations/bear'\nimport reportWebVitals from './reportWebVitals';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["74","75"],"/Users/chui/Documents/test/bear-buddies/frontend/src/reportWebVitals.js",[],"/Users/chui/Documents/test/bear-buddies/frontend/src/animations/bear.js",["76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110"],"import React, { useRef, useState, useEffect } from 'react';\nimport { Ellipse, Shape, RoundedRect, useRender, Polygon } from 'react-zdog';\n// New react-spring target, for native animation outside of React\nimport { a, useSpring } from 'react-spring/zdog';\nimport { observer } from \"mobx-react\";\n\n/** --- CONSTANTS -------------------------- */\nconst TAU = Math.PI * 2;\n\nfunction useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    // remember latest callback\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // setup the interval\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n}\n\nfunction NormalBear(templateStore) {\n    const [up, setUp] = useState(true)\n\n    useInterval(() => {\n        setUp(!up)\n    }, 450);\n\n    const leftArm = up ? 3 : 6;\n    const leftLeg = up ? 1 : 3;\n    const rightArm = up ? -3 : -6;\n    const rightLeg = up ? 1 : -3;\n\n    const size = 1.2;\n    const color = \"#7a5843\"\n    const color_tint = \"#7b6044\"\n    const rotation = 0;\n    const { la, ll, ra, rl } = useSpring({ la: up ? 3 : leftArm, ll: up ? 0 : leftLeg, ra: up ? -3 : rightArm, rl: up ? 0 : rightLeg });\n\n    const ref = useRef()\n    let t = 0\n    useRender(() => (ref.current.rotate.y = Math.cos((t += 0.1) / TAU)));\n\n    // add conditional to check for accessories\n    const Glasses = () => {\n        if (templateStore.glasses){\n        return (<a.Shape stroke={0}>\n            <Ellipse diameter={3} translate={{ x: -2.2, y: -1, z: 6.8 }} closed color=\"gold\" stroke={0.3} />\n            <Ellipse diameter={3} translate={{ x: 2.2, y: -1, z: 6.8 }} closed color=\"gold\" stroke={0.3} />\n            <Shape path={[{ x: -0.5 }, { x: 0.5 }]} stroke={0.3} translate={{ x: 0, y: -1, z: 6.8 }} color=\"gold\" />\n        </a.Shape>)\n        }\n        else{\n            return (<a.Shape stroke={0} />)\n        }\n    };\n\n    const Scarf = () => {\n        if (templateStore.scarf){\n        return(\n        <a.Shape stroke={0}>\n            <Ellipse diameter={13} quarters={2} color=\"purple\" stroke={2} rotate={{ x: TAU / 4.5, y: TAU / 1, z: TAU / 3.5 }} translate={{ x: 0, y: 6, z: 0 }} />\n        </a.Shape>\n        )}\n        else{\n            return (<a.Shape stroke={0} />)\n        }\n    };\n\n    const Face = () => {\n        if (templateStore.happy < 50 ||\n            templateStore.clean < 50 ||\n            templateStore.health < 50 ||\n            templateStore.energy < 50 ||\n            templateStore.full < 50) {\n            return SadFace;\n        } else if (templateStore.calm < 50) {\n            return AngryFace;\n        } else if (templateStore.happy >= 100 &&\n            templateStore.clean >= 100 &&\n            templateStore.health >= 100 &&\n            templateStore.energy >= 100 &&\n            templateStore.full >= 100 &&\n            templateStore.calm >= 100) {\n            return HappyFace;\n        } else {\n            return NeutralFace;\n        }\n    };\n    const NeutralFace = (\n        <a.Shape stroke={0}>\n            <a.Shape ref={ref} stroke={1.2} translate={{ x: -2.2, y: -1, z: 6.8 }} color=\"#241d19\" fill /> {/*left eye*/}\n            <a.Shape ref={ref} stroke={1.2} translate={{ x: 2.2, y: -1, z: 6.8 }} color=\"#241d19\" fill /> {/*right eye*/}\n        </a.Shape>\n    );\n\n    const HappyFace = (\n        <a.Shape stroke={0}>\n            <a.Ellipse stroke={0.5} diameter={1.5} quarters={2} translate={{ x: -2.2, y: -1, z: 6 }} rotate={{ z: TAU - TAU / 4 }} color=\"#241d19\" /> {/*left eye*/}\n            <a.Ellipse stroke={0.5} diameter={1.5} quarters={2} translate={{ x: 2.2, y: -1, z: 6 }} rotate={{ z: TAU - TAU / 4 }} color=\"#241d19\" /> {/*right eye*/}\n            <Ellipse diameter={2.5} quarters={2} translate={{ y: 3, z: 7 }} rotate={{ z: TAU / 4 }} closed={true} color=\"#FED\" fill />\n        </a.Shape>\n    );\n\n    // happiness indicator\n    const SadFace = (\n        <a.Shape stroke={0}>\n            <Shape path={[{ x: -2.75 }, { x: -2 }]} stroke={0.5} translate={{ x: 0, y: -1, z: 6.8 }} color=\"#241d19\" />\n            <Shape path={[{ x: 2 }, { x: 2.75 }]} stroke={0.5} translate={{ x: 0, y: -1, z: 6.8 }} color=\"#241d19\" />\n            <Shape path={[{ x: 2.5 }, { x: 2.5, y: 3 }]} stroke={1} translate={{ x: 0, y: -0.3, z: 6.8 }} color=\"#87c9e8\" />\n            <Shape path={[{ x: -2.5 }, { x: -2.5, y: 4 }]} stroke={1} translate={{ x: 0, y: -0.3, z: 6.8 }} color=\"#87c9e8\" />\n        </a.Shape>\n    );\n\n    // calmness indicator\n    const AngryFace = (\n        <a.Shape stroke={0}>\n            <Shape path={[{ x: -2.75 }, { x: -2 }]} stroke={0.5} translate={{ x: 0, y: -1, z: 6.8 }} color=\"#241d19\" />\n            <Shape path={[{ x: 2 }, { x: 2.75 }]} stroke={0.5} translate={{ x: 0, y: -1, z: 6.8 }} color=\"#241d19\" />\n            <Shape path={[{ x: -2.75 }, { x: -2 }]} stroke={0.5} translate={{ x: 0, y: -2, z: 6.8 }} rotate={{ z: TAU - TAU / 1.1 }} color=\"#241d19\" />\n            <Shape path={[{ x: 2 }, { x: 2.75 }]} stroke={0.5} translate={{ x: 0, y: -2, z: 6.8 }} rotate={{ z: TAU - TAU / 9 }} color=\"#241d19\" />\n        </a.Shape>\n    );\n\n    // cleanliness indicator\n    const Poop = () => {\n        if (templateStore.clean < 50) {\n            return (\n                <a.Shape stroke={0} translate={{ x: 20 }} scale={0.5} rotate={{ x: TAU / -4 }}>\n                    <Ellipse diameter={7} color=\"brown\" stroke={4} />\n                    <Ellipse diameter={5} color=\"brown\" stroke={3} translate={{ z: -3 }} />\n                    <Ellipse diameter={3} color=\"brown\" stroke={2} translate={{ z: -5 }} />\n                    <a.Cone diameter={4} color=\"brown\" length={-4} translate={{ z: -6 }} stroke={false} />\n                </a.Shape>\n            )\n        } else return (\n            (<a.Shape stroke={0} />)\n        )\n    };\n\n    return (\n        <a.Shape ref={ref} stroke={15} translate={{ y: -9.5 }} color={color}> {/*head*/}\n            <a.Shape ref={ref} stroke={4} translate={{ x: -7, y: -4 }} color={color_tint} fill /> {/*left ear*/}\n            <a.Shape ref={ref} stroke={4} translate={{ x: 7, y: -4 }} color={color_tint} fill /> {/*right ear*/}\n            <a.Shape height={3} width={2} ref={ref} scale={size} translate={{ y: 2.5, z: 6.8 }} rotate={{ z: TAU / 4 }} closed color=\"#b08b74\" stroke={6} fill /> {/*mouth*/}\n            <a.Shape height={1.3} width={1} ref={ref} scale={size} translate={{ y: 2, z: 9 }} rotate={{ z: TAU / 4 }} closed color=\"#241d19\" stroke={3} fill> {/*nose*/}\n                <a.Ellipse height={.1} width={.05} ref={ref} translate={{ x: -.5, y: 0, z: 0 }} color=\"white\" fill />\n            </a.Shape>\n            <Ellipse diameter={1} translate={{ x: -3.5, y: 1.5, z: 6.5 }} rotate={{ z: TAU / 4 }} closed color=\"indianred\" stroke={0.5} fill /> {/*left blush*/}\n            <Ellipse diameter={1} translate={{ x: 3.5, y: 1.5, z: 6.5 }} rotate={{ z: TAU / 4 }} closed color=\"indianred\" stroke={0.5} fill /> {/*left right*/}\n            <a.Ellipse height={7} width={4} ref={ref} stroke={14} translate={{ x: 0, y: 13 }} color={color} fill /> {/*body*/}\n            <a.Ellipse height={6} width={1.5} ref={ref} stroke={5} translate={{ x: 11, y: 10 }} rotate={{ z: TAU / 3 }} color={color_tint} fill /> {/*left arm*/}\n            <a.Ellipse height={6} width={1.5} ref={ref} stroke={5} translate={{ x: -11, y: 10 }} rotate={{ z: TAU / -3 }} color={color_tint} fill /> {/*right arm*/}\n            <a.Ellipse height={4} width={2} ref={ref} stroke={7} translate={{ x: 6, y: 23 }} rotate={{ z: TAU / 1 }} color={color_tint} fill /> {/*left leg*/}\n            <a.Ellipse height={4} width={2} ref={ref} stroke={7} translate={{ x: -6, y: 23 }} rotate={{ z: TAU / 1 }} color={color_tint} fill /> {/*right leg*/}\n            <Scarf />\n            <Poop />\n            <Glasses />\n            <Face />\n        </a.Shape>\n    );\n}\n\nfunction FeedBear() {\n    const [up, setUp] = useState(true)\n\n    useInterval(() => {\n        setUp(!up)\n    }, 450);\n\n    const two = 15;\n\n    const leftArm = up ? 3 : 6;\n    const leftLeg = up ? 1 : 3;\n    const rightArm = up ? -3 : -6;\n    const rightLeg = up ? 1 : -3;\n\n    const size = 1.2;\n    const color = \"#7a5843\"\n    const color_tint = \"#7b6044\"\n    const { la, ll, ra, rl } = useSpring({ la: up ? 3 : leftArm, ll: up ? 0 : leftLeg, ra: up ? -3 : rightArm, rl: up ? 0 : rightLeg });\n\n    const ref = useRef()\n    let t = 0\n    useRender(() => (ref.current.rotate.y = Math.cos((t += 0.1) / TAU)));\n\n    const Fish = () => (\n        <a.Shape stroke={0} translate={{ x: 20 }} >\n            <a.Cone diameter={6} color=\"coral\" length={-4} translate={{ z: -1 }} />\n            <a.Hemisphere diameter={6} color=\"indianred\" stroke='false' />\n            <a.Shape path={[{ x: 0, y: -1.5 },\n            { x: 1.5, y: 1.5 },\n            { x: -1.5, y: 1.5 },\n            ]} stroke={2} color=\"coral\" translate={{ z: 5 }} rotate={{ y: TAU / -4 }} />\n            <a.Shape stroke={0.5} color='black' translate={{ z: -4, x: -1 }} />\n            <a.Shape stroke={0.5} color='black' translate={{ z: -4, x: 1 }} />\n        </a.Shape>\n    );\n\n    return (\n        <a.Shape ref={ref} stroke={15} translate={{ y: -9.5 }} color={color}> {/*head*/}\n            <a.Shape ref={ref} stroke={4} translate={{ x: -7, y: -4 }} color={color_tint} fill /> {/*left ear*/}\n            <a.Shape ref={ref} stroke={4} translate={{ x: 7, y: -4 }} color={color_tint} fill /> {/*right ear*/}\n            <Ellipse diameter={1.5} quarters={2} translate={{ x: -2.2, y: -1, z: 6.8 }} rotate={{ z: -TAU / 4 }} color=\"#241d19\" stroke={0.5} /> {/*left eye*/}\n            <Ellipse diameter={1.5} quarters={2} translate={{ x: 2.2, y: -1, z: 6.8 }} rotate={{ z: -TAU / 4 }} color=\"#241d19\" stroke={0.5} /> {/*right eye*/}\n            <a.Shape height={3} width={2} ref={ref} scale={size} translate={{ y: 2.5, z: 6.8 }} rotate={{ z: TAU / 4 }} closed color=\"#b08b74\" stroke={6} fill /> {/*mouth*/}\n            <Ellipse diameter={2.5} quarters={2} translate={{ y: 3, z: 7 }} rotate={{ z: TAU / 4 }} closed={true} color=\"#FED\" fill />\n            <a.Shape height={1.3} width={1} ref={ref} scale={size} translate={{ y: 2, z: 9 }} rotate={{ z: TAU / 4 }} closed color=\"#241d19\" stroke={3} fill> {/*nose*/}\n                <a.Ellipse height={.1} width={.05} ref={ref} translate={{ x: -.5, y: 0, z: 0 }} color=\"white\" fill />\n            </a.Shape>\n            <Ellipse diameter={1} translate={{ x: -3.5, y: 1.5, z: 6.5 }} rotate={{ z: TAU / 4 }} closed color=\"indianred\" stroke={0.5} fill /> {/*left blush*/}\n            <Ellipse diameter={1} translate={{ x: 3.5, y: 1.5, z: 6.5 }} rotate={{ z: TAU / 4 }} closed color=\"indianred\" stroke={0.5} fill /> {/*left right*/}\n            <a.Ellipse height={7} width={4} ref={ref} stroke={14} translate={{ x: 0, y: 13 }} color={color} fill /> {/*body*/}\n            <a.Ellipse height={6} width={1.5} ref={ref} stroke={5} translate={{ x: 11, y: 8 }} rotate={{ z: TAU / 6 }} color={color_tint} fill /> {/*left arm*/}\n            <a.Ellipse height={6} width={1.5} ref={ref} stroke={5} translate={{ x: -11, y: 8 }} rotate={{ z: TAU / -6 }} color={color_tint} fill /> {/*right arm*/}\n            <a.Ellipse height={4} width={2} ref={ref} stroke={7} translate={{ x: 6, y: 23 }} rotate={{ z: TAU / 1 }} color={color_tint} fill /> {/*left leg*/}\n            <a.Ellipse height={4} width={2} ref={ref} stroke={7} translate={{ x: -6, y: 23 }} rotate={{ z: TAU / 1 }} color={color_tint} fill /> {/*right leg*/}\n            <a.Shape stroke={0} ref={ref}>\n                <a.Shape path={[{ x: -20, y: 0.5, z: 12 }, { x: -17, y: -5, z: 12 }, { x: -14, y: 0.5, z: 12 }]} color=\"#2d6636\" closed={false} />\n                <a.Ellipse height={1} width={1} stroke={4} color='#c21540' translate={{ x: -20, y: 1.5, z: 14 }} fill />\n                <a.Ellipse height={1} width={1} stroke={4} color='#c21540' translate={{ x: -14, y: 1.5, z: 14 }} fill />\n            </a.Shape>\n            <a.Shape stroke={0} ref={ref}>\n                <a.Shape path={[{ x: -20 + two, y: 0.5 + two, z: 12 }, { x: -17 + two, y: -5 + two, z: 12 }, { x: -14 + two, y: 0.5 + two, z: 12 }]} color=\"#2d6636\" closed={false} />\n                <a.Ellipse height={1} width={1} stroke={4} color='#c21540' translate={{ x: -20 + two, y: 1.5 + two, z: 14 }} fill />\n                <a.Ellipse height={1} width={1} stroke={4} color='#c21540' translate={{ x: -14 + two, y: 1.5 + two, z: 14 }} fill />\n            </a.Shape>\n            <Fish />\n            <a.Shape stroke={0} translate={{ x: -15, y: 15.5 }} rotate={{ y: TAU / 1.5 }} >\n                <Fish />\n            </a.Shape>\n        </a.Shape>\n    );\n\n}\n\nfunction PlayBear() {\n    const [up, setUp] = useState(true)\n\n    useInterval(() => {\n        setUp(!up)\n    }, 450);\n\n    const leftArm = up ? 3 : 6;\n    const leftLeg = up ? 1 : 3;\n    const rightArm = up ? -3 : -6;\n    const rightLeg = up ? 1 : -3;\n\n    // const {rotation, color, color_tint, size} = useSpring({ size: up ? 1.2 : 0.2, color: up ? '#7a5843' : '#7a5843', color_tint: up ? '#7b6044' : '#7b6044', rotation: up ? 0 : Math.PI });\n    const size = 1.2;\n    const color = \"#7a5843\"\n    const color_tint = \"#7b6044\"\n    const rotation = 0;\n    // const {rotation, color, size} = useSpring({ size: up ? 1.2 : bbb, color: up ? '#EA0' : aaa, rotation: up ? 0 : ccc })\n    const { la, ll, ra, rl } = useSpring({ la: up ? 3 : leftArm, ll: up ? 0 : leftLeg, ra: up ? -3 : rightArm, rl: up ? 0 : rightLeg });\n\n    const ref = useRef()\n    let t = 0\n    useRender(() => (ref.current.rotate.y = Math.cos((t += 0.1) / TAU)));\n\n    const Headband = () => (\n        <a.Shape stroke={0}>\n            <Ellipse diameter={10} quarters={2} color=\"#9c162c\" stroke={2} rotate={{ x: TAU / 4, y: TAU / 1, z: TAU / 3.5 }} translate={{ x: 0, y: -4, z: 1 }} />\n            <Ellipse diameter={11} quarters={2} color=\"white\" stroke={0.2} rotate={{ x: TAU / 4, y: TAU / 1, z: TAU / 3.5 }} translate={{ x: 0, y: -4, z: 1 }} />\n        </a.Shape>\n    );\n\n    return (\n        <a.Shape ref={ref} stroke={15} translate={{ y: -9.5 }} color={color}> {/*head*/}\n            <a.Shape>\n                <a.Shape ref={ref} stroke={1.5} translate={{ x: 15, y: 0, z: 5 }} color=\"#87c9e8\" fill />\n                <a.Shape ref={ref} stroke={1.5} translate={{ x: 0, y: 1, z: 5 }} color=\"#87c9e8\" fill />\n            </a.Shape>\n\n            <Shape path={[{ x: 0 }, { x: 1 }]} stroke={0.5} translate={{ x: -2, y: -1, z: 5 }} rotate={{ z: TAU / 1.8 }} color=\"#241d19\" />\n            <Shape path={[{ x: 0 }, { x: 1 }]} stroke={0.5} translate={{ x: -2, y: -1, z: 5 }} rotate={{ z: TAU / 2.5 }} color=\"#241d19\" />\n\n            <Shape path={[{ x: 0 }, { x: 1 }]} stroke={0.5} translate={{ x: 3, y: -1, z: 5 }} rotate={{ z: TAU / 1.1 }} color=\"#241d19\" />\n            <Shape path={[{ x: 0 }, { x: 1 }]} stroke={0.5} translate={{ x: 3, y: -1, z: 5 }} rotate={{ z: TAU / 8.5 }} color=\"#241d19\" />\n\n            <a.Shape ref={ref} stroke={4} translate={{ x: -7, y: -4 }} color={color_tint} fill /> {/*left ear*/}\n            <a.Shape ref={ref} stroke={4} translate={{ x: 7, y: -4 }} color={color_tint} fill /> {/*right ear*/}\n\n            <a.Shape height={3} width={2} ref={ref} scale={size} translate={{ y: 2.5, z: 6.8 }} rotate={{ z: TAU / 4 }} closed color=\"#b08b74\" stroke={6} fill /> {/*mouth*/}\n            <a.Shape height={1.3} width={1} ref={ref} scale={size} translate={{ y: 2, z: 9 }} rotate={{ z: TAU / 4 }} closed color=\"#241d19\" stroke={3} fill> {/*nose*/}\n                <a.Ellipse height={.1} width={.05} ref={ref} translate={{ x: -.5, y: 0, z: 0 }} color=\"white\" fill />\n            </a.Shape>\n            <Ellipse diameter={1} translate={{ x: -3.5, y: 1.5, z: 6.5 }} rotate={{ z: TAU / 4 }} closed color=\"indianred\" stroke={0.5} fill /> {/*left blush*/}\n            <Ellipse diameter={1} translate={{ x: 3.5, y: 1.5, z: 6.5 }} rotate={{ z: TAU / 4 }} closed color=\"indianred\" stroke={0.5} fill /> {/*left right*/}\n            <a.Ellipse height={7} width={4} ref={ref} stroke={14} translate={{ x: 0, y: 13 }} color={color} fill /> {/*body*/}\n            <a.Ellipse height={6} width={1.5} ref={ref} stroke={5} translate={{ x: 11, y: up ? 10 : 10 - 3 }} rotate={{ z: TAU / (up ? 3 : leftArm) }} color={color_tint} fill /> {/*left arm*/}\n            <a.Ellipse height={6} width={1.5} ref={ref} stroke={5} translate={{ x: -11, y: up ? 10 : 10 - 3 }} rotate={{ z: TAU / (up ? -3 : rightArm) }} color={color_tint} fill /> {/*right arm*/}\n            <a.Ellipse height={4} width={2} ref={ref} stroke={7} translate={{ x: 6, y: up ? 23 : 23 - 2 }} rotate={{ z: TAU / (up ? 1 : leftLeg) }} color={color_tint} fill /> {/*left leg*/}\n            <a.Ellipse height={4} width={2} ref={ref} stroke={7} translate={{ x: -6, y: up ? 23 : 23 - 2 }} rotate={{ z: TAU / (up ? 1 : rightLeg) }} color={color_tint} fill /> {/*right leg*/}\n            <Headband />\n        </a.Shape>\n    );\n}\n\nfunction BreatheBear() {\n    const [up, setUp] = useState(true)\n\n    useInterval(() => {\n        setUp(!up)\n    }, 450);\n\n    const leftArm = up ? 3 : 6;\n    const leftLeg = up ? 1 : 3;\n    const rightArm = up ? -3 : -6;\n    const rightLeg = up ? 1 : -3;\n\n    const tummy = up ? 1 : 1.1;\n\n    const size = 1.2;\n    const color = \"#7a5843\"\n    const color_tint = \"#7b6044\"\n    const { la, ll, ra, rl } = useSpring({ la: up ? 3 : leftArm, ll: up ? 0 : leftLeg, ra: up ? -3 : rightArm, rl: up ? 0 : rightLeg });\n\n    const ref = useRef()\n    let t = 0\n    useRender(() => (ref.current.rotate.y = Math.cos((t += 0.1) / TAU)));\n\n    return (\n        <a.Shape ref={ref} stroke={15} translate={{ y: -9.5 }} color={color}> {/*head*/}\n            <a.Shape ref={ref} stroke={4} translate={{ x: -7, y: -4 }} color={color_tint} fill /> {/*left ear*/}\n            <a.Shape ref={ref} stroke={4} translate={{ x: 7, y: -4 }} color={color_tint} fill /> {/*right ear*/}\n            <a.Ellipse stroke={0.3} diameter={3} quarters={1} translate={{ x: -2.2, y: -3, z: 5 }} rotate={{ z: TAU / 3 }} color=\"#241d19\" /> {/*left eye*/}\n            <a.Ellipse stroke={0.3} diameter={3} quarters={1} translate={{ x: 2.2, y: -3, z: 5 }} rotate={{ z: TAU / 3 }} color=\"#241d19\" /> {/*right eye*/}\n            <a.Shape height={3} width={2} ref={ref} scale={size} translate={{ y: 2.5, z: 6.8 }} rotate={{ z: TAU / 4 }} closed color=\"#b08b74\" stroke={6} fill /> {/*mouth*/}\n            <a.Shape height={1.3} width={1} ref={ref} scale={size} translate={{ y: 2, z: 9 }} rotate={{ z: TAU / 4 }} closed color=\"#241d19\" stroke={3} fill> {/*nose*/}\n                <a.Ellipse height={.1} width={.05} ref={ref} translate={{ x: -.5, y: 0, z: 0 }} color=\"white\" fill />\n            </a.Shape>\n            <Ellipse diameter={1} translate={{ x: -3.5, y: 1.5, z: 6.5 }} rotate={{ z: TAU / 4 }} closed color=\"indianred\" stroke={0.5} fill /> {/*left blush*/}\n            <Ellipse diameter={1} translate={{ x: 3.5, y: 1.5, z: 6.5 }} rotate={{ z: TAU / 4 }} closed color=\"indianred\" stroke={0.5} fill /> {/*left right*/}\n            <a.Ellipse height={7} width={4} ref={ref} stroke={14} scale={up ? 1 : tummy} translate={{ x: 0, y: 13 }} rotate={{ z: TAU / 2 }} color={color} fill /> {/*body*/}\n            <a.Ellipse height={6} width={1.5} ref={ref} stroke={5} translate={{ x: 4, y: 10, z: 6 }} rotate={{ z: TAU / -8 }} color={color_tint} fill /> {/*left arm*/}\n            <a.Ellipse height={6} width={1.5} ref={ref} stroke={5} translate={{ x: -4, y: 10, z: 6 }} rotate={{ z: TAU / 8 }} color={color_tint} fill /> {/*right arm*/}\n            <a.Ellipse height={4} width={2} ref={ref} stroke={7} translate={{ x: 4, y: 23 }} rotate={{ z: TAU / 5 }} color={color_tint} fill /> {/*left leg*/}\n            <a.Ellipse height={4} width={2} ref={ref} stroke={7} translate={{ x: -4, y: 23 }} rotate={{ z: TAU / -5 }} color={color_tint} fill /> {/*right leg*/}\n        </a.Shape>\n    );\n}\n\nfunction BatheBear() {\n    const TAU = Math.PI * 2\n\n    const [up, setUp] = useState(true)\n\n    useInterval(() => {\n        setUp(!up)\n    }, 450);\n\n    const leftArm = up ? 3 : 6;\n    const leftLeg = up ? 1 : 3;\n    const rightArm = up ? -3 : -6;\n    const rightLeg = up ? 1 : -3;\n\n    // const {rotation, color, color_tint, size} = useSpring({ size: up ? 1.2 : 0.2, color: up ? '#7a5843' : '#7a5843', color_tint: up ? '#7b6044' : '#7b6044', rotation: up ? 0 : Math.PI });\n    const size = 1.2;\n    const color = \"#7a5843\"\n    const color_tint = \"#7b6044\"\n    const rotation = 0;\n    // const {rotation, color, size} = useSpring({ size: up ? 1.2 : bbb, color: up ? '#EA0' : aaa, rotation: up ? 0 : ccc })\n    const { la, ll, ra, rl } = useSpring({ la: up ? 3 : leftArm, ll: up ? 0 : leftLeg, ra: up ? -3 : rightArm, rl: up ? 0 : rightLeg });\n\n    const ref = useRef()\n    let t = 0\n    useRender(() => (ref.current.rotate.y = 2 * Math.cos((t += 0.1) / TAU)));\n\n    return (\n        <a.Shape stroke={0} translate={{ y: 4 }}>\n            <a.Shape stroke={15} translate={{ y: -9.5 }} color={color}> {/*head*/}\n                <a.Shape stroke={4} translate={{ x: -7, y: -4 }} color={color_tint} fill /> {/*left ear*/}\n                <a.Shape stroke={4} translate={{ x: 7, y: -4 }} color={color_tint} fill /> {/*right ear*/}\n                {/*<Eye /> left eye*/}\n                <a.Ellipse stroke={0.5} diameter={1.5} quarters={2} translate={{ x: -2.2, y: -1, z: 5 }} rotate={{ z: TAU - TAU / 4 }} color=\"#241d19\" /> {/*left eye*/}\n                {/*<Eye translate={{ x: 2.2, z: 6.8 }} /> right eye*/}\n                <a.Ellipse stroke={0.5} diameter={1.5} quarters={2} translate={{ x: 2.2, y: -1, z: 5 }} rotate={{ z: TAU - TAU / 4 }} color=\"#241d19\" /> {/*right eye*/}\n                <a.Shape height={3} width={2} ref={ref} scale={size} translate={{ y: 2.5, z: 6.8 }} rotate={{ z: TAU / 4 }} closed color=\"#b08b74\" stroke={6} fill /> {/*mouth*/}\n                <a.Shape height={1.3} width={1} ref={ref} scale={size} translate={{ y: 2, z: 9 }} rotate={{ z: TAU / 4 }} closed color=\"#241d19\" stroke={3} fill> {/*nose*/}\n                    <a.Ellipse height={.1} width={.05} ref={ref} translate={{ x: -.5, y: 0, z: 0 }} color=\"white\" fill />\n                </a.Shape>\n                <Ellipse diameter={1} translate={{ x: -3.5, y: 1.5, z: 6.5 }} rotate={{ z: TAU / 4 }} closed color=\"indianred\" stroke={0.5} fill /> {/*left blush*/}\n                <Ellipse diameter={1} translate={{ x: 3.5, y: 1.5, z: 6.5 }} rotate={{ z: TAU / 4 }} closed color=\"indianred\" stroke={0.5} fill /> {/*left right*/}\n                <a.Ellipse height={7} width={4} ref={ref} stroke={14} translate={{ x: 0, y: 13 }} color={color} fill /> {/*body*/}\n                <a.Ellipse height={6} width={1.5} ref={ref} stroke={5} translate={{ x: 11, y: (up ? 10 : 8) }} rotate={{ z: TAU / (up ? 3 : leftArm) }} color={color_tint} fill /> {/*left arm*/}\n                <a.Ellipse height={6} width={1.5} ref={ref} stroke={5} translate={{ x: -11, y: (up ? 10 : 8) }} rotate={{ z: TAU / (up ? -3 : rightArm) }} color={color_tint} fill /> {/*right arm*/}\n                <a.Ellipse height={4} width={2} ref={ref} stroke={7} translate={{ x: 6, y: 22, z: 5 }} rotate={{ x: TAU / 4 }} color={color_tint} fill /> {/*left leg*/}\n                <a.Ellipse height={4} width={2} ref={ref} stroke={7} translate={{ x: -6, y: 22, z: 5 }} rotate={{ x: TAU / 4 }} color={color_tint} fill /> {/*right leg*/}\n                {/* had to put 0.001 cuz cant divide by 0    */}\n            </a.Shape>\n            <a.Shape stroke={0} ref={ref} translate={{ y: 6, z: -1 }}>\n                <a.Shape stroke={5} color='blue' translate={{ x: 5, y: 16, z: 2 }} />\n                <a.Shape stroke={8} color='blue' translate={{ x: -25, y: -8, z: 10 }} />\n                <a.Shape stroke={12} color='blue' translate={{ x: -8, y: 10, z: -15 }} />\n                <a.Shape stroke={16} color='blue' translate={{ x: 21, y: -3, z: -8 }} />\n                <a.Shape stroke={18} color='blue' translate={{ x: 13, y: 6, z: 8 }} />\n                <a.Shape stroke={20} color='blue' translate={{ x: -19, y: -9, z: 17 }} />\n                <a.Shape stroke={3} color='skyBlue' translate={{ x: -6, y: 1.5, z: 9 }} />\n                <a.Shape stroke={7} color='skyBlue' translate={{ x: 10, y: -4, z: -10 }} />\n                <a.Shape stroke={11} color='skyBlue' translate={{ x: 13, y: 20, z: 15 }} />\n                <a.Shape stroke={15} color='skyBlue' translate={{ x: -18, y: -15, z: 5 }} />\n                <a.Shape stroke={3} color='cyan' translate={{ x: -5, y: -9, z: 10 }} />\n                <a.Shape stroke={5} color='cyan' translate={{ x: 12, y: 20, z: 18 }} />\n                <a.Shape stroke={7} color='cyan' translate={{ x: -16, y: 13, z: -9 }} />\n            </a.Shape>\n\n        </a.Shape>\n    )\n\n}\n\nfunction SleepBear() {\n    const TAU = Math.PI * 2\n\n    const [up, setUp] = useState(true)\n\n    useInterval(() => {\n        setUp(!up)\n    }, 450);\n\n    const leftArm = up ? 3 : 6;\n    const leftLeg = up ? 1 : 3;\n    const rightArm = up ? -3 : -6;\n    const rightLeg = up ? 1 : -3;\n\n    // const {rotation, color, color_tint, size} = useSpring({ size: up ? 1.2 : 0.2, color: up ? '#7a5843' : '#7a5843', color_tint: up ? '#7b6044' : '#7b6044', rotation: up ? 0 : Math.PI });\n    const size = 1.2;\n    const color = \"#7a5843\"\n    const color_tint = \"#7b6044\"\n    const rotation = 0;\n    // const {rotation, color, size} = useSpring({ size: up ? 1.2 : bbb, color: up ? '#EA0' : aaa, rotation: up ? 0 : ccc })\n    const { la, ll, ra, rl } = useSpring({ la: up ? 3 : leftArm, ll: up ? 0 : leftLeg, ra: up ? -3 : rightArm, rl: up ? 0 : rightLeg });\n\n    const ref = useRef()\n    let t = 0\n    useRender(() => (ref.current.rotate.y = Math.cos((t += 0.1) / TAU)));\n    // const Eye = props => <Ellipse diameter={1.5} quarters={2} translate={{ x: -2.2, y: 0, z: 6.8 }} rotate={{ z: -TAU / 4 }} color=\"#241d19\" stroke={0.5} />\n    // const Leg = props => (\n    //     <a.Shape path={[{ y: 0 }, { y: 6 }]} translate={{ x: -3 }} color=\"#747B9E\" stroke={4} {...props}>\n    //         <Shape path={[{ y: 0 }, { y: 6 }]} translate={{ y: 6 }} rotate={{ x: -TAU / 8 }} color=\"#747B9E\" stroke={4} />\n    //         <RoundedRect width={2} height={4} cornerRadius={1} translate={{ y: 12, z: -3.5 }} rotate={{ x: TAU / 6 }} color=\"#444B6E\" fill stroke={4} />\n    //     </a.Shape>\n    // )\n    // const Arm = props => (\n    //     <a.Shape path={[{ y: 0 }, { y: 4 }]} translate={{ x: -5, y: -2 }} color=\"#F0F2EF\" stroke={4} {...props}>\n    //         <Shape path={[{ y: 0 }, { y: 4 }]} translate={{ y: 6 }} rotate={{ x: TAU / 8 }} color=\"#EA0\" stroke={4} />\n    //         <Shape translate={{ z: 4, y: 9, x: 0 }} stroke={5.4} color=\"#EA0\" />\n    //     </a.Shape>\n    // )\n    return (\n        <a.Shape stroke={0} translate={{ y: 10 }}>\n            <a.Shape stroke={15} translate={{ y: 0, x: 10 }} rotate={{ z: TAU / 4, x: TAU / 4 }} color={color}> {/*head*/}\n                <a.Shape stroke={4} translate={{ x: -7, y: -4 }} color={color_tint} fill /> {/*left ear*/}\n                <a.Shape stroke={4} translate={{ x: 7, y: -4 }} color={color_tint} fill /> {/*right ear*/}\n                {/*<Eye /> left eye*/}\n                <a.Ellipse stroke={0.3} diameter={3} quarters={1} translate={{ x: -2.2, y: -3, z: 5 }} rotate={{ z: TAU / 3 }} color=\"#241d19\" /> {/*left eye*/}\n                {/*<Eye translate={{ x: 2.2, z: 6.8 }} /> right eye*/}\n                <a.Ellipse stroke={0.3} diameter={3} quarters={1} translate={{ x: 2.2, y: -3, z: 5 }} rotate={{ z: TAU / 3 }} color=\"#241d19\" /> {/*right eye*/}\n                <a.Shape height={3} width={2} scale={size} translate={{ y: 2.5, z: 6.8 }} rotate={{ z: TAU / 4 }} closed color=\"#b08b74\" stroke={6} fill /> {/*mouth*/}\n                <a.Shape height={1.3} width={1} scale={size} translate={{ y: 2, z: 9 }} rotate={{ z: TAU / 4 }} closed color=\"#241d19\" stroke={3} fill> {/*nose*/}\n                    <a.Ellipse height={.1} width={.05} translate={{ x: -.5, y: 0, z: 0 }} color=\"white\" fill />\n                </a.Shape>\n                <a.Ellipse height={7} width={4} stroke={14} translate={{ x: 0, y: 13 }} color={color} fill /> {/*body*/}\n                <a.Ellipse height={6} width={3} stroke={5} translate={{ x: 11, y: 10 }} rotate={{ z: TAU / 3 }} color={color_tint} fill /> {/*left arm*/}\n                <a.Ellipse height={6} width={3} stroke={5} translate={{ x: -11, y: 10 }} rotate={{ z: TAU / -3 }} color={color_tint} fill /> {/*right arm*/}\n                <a.Ellipse height={4} width={4} stroke={7} translate={{ x: 7, y: 23 }} color={color_tint} fill /> {/*left leg*/}\n                <a.Ellipse height={4} width={4} stroke={7} translate={{ x: -7, y: 23 }} color={color_tint} fill /> {/*right leg*/}\n\n            </a.Shape>\n            <a.Shape stroke={0} ref={ref}>\n                <a.Shape closed={false} stroke={1} color='#636' path={[{ x: -1, y: -2 }, // start at top left\n                { x: 1, y: -2 }, // line to top right\n                { x: -1, y: 2 }, // line to bottom left\n                { x: 1, y: 2 }]}\n                    translate={{ x: -20, y: 1.5, z: 15 }}\n                    rotate={{ y: TAU / 3 }}\n                />\n                <a.Shape closed={false} stroke={1.6} color='#636' path={[{ x: -1, y: -3 }, // start at top left\n                { x: 1, y: -3 }, // line to top right\n                { x: -1, y: 3 }, // line to bottom left\n                { x: 1, y: 3 }]}\n                    translate={{ x: 20, y: 1.5, z: 20 }}\n                />\n                <a.Shape closed={false} stroke={2} color='#636' path={[{ x: -1, y: -3 }, // start at top left\n                { x: 1, y: -3 }, // line to top right\n                { x: -1, y: 3 }, // line to bottom left\n                { x: 1, y: 3 }]}\n                    translate={{ x: 0, y: -15, z: -30 }}\n                    rotate={{ y: TAU }}\n                />\n            </a.Shape>\n\n        </a.Shape>\n    )\n}\n\nfunction PetBear() {\n    const [up, setUp] = useState(true)\n\n    useInterval(() => {\n        setUp(!up)\n    }, 450);\n\n    const leftArm = 4\n    const leftLeg = 3\n    const rightArm = -4\n    const rightLeg = -3\n\n    // const {rotation, color, color_tint, size} = useSpring({ size: up ? 1.2 : 0.2, color: up ? '#7a5843' : '#7a5843', color_tint: up ? '#7b6044' : '#7b6044', rotation: up ? 0 : Math.PI });\n    const size = 1.2;\n    const color = \"#7a5843\"\n    const color_tint = \"#7b6044\"\n    const rotation = 0;\n    // const {rotation, color, size} = useSpring({ size: up ? 1.2 : bbb, color: up ? '#EA0' : aaa, rotation: up ? 0 : ccc })\n    const { la, ll, ra, rl } = useSpring({ la: up ? 3 : leftArm, ll: up ? 0 : leftLeg, ra: up ? -3 : rightArm, rl: up ? 0 : rightLeg });\n\n    const ref = useRef()\n    let t = 0\n    useRender(() => (ref.current.rotate.y = Math.cos((t += 0.1) / TAU)));\n\n    return (\n        <a.Shape translate={{ y: -10 }}>\n            <a.Shape ref={ref} stroke={15} translate={{ y: (up ? 0 : 0.5) }} color={color}> {/*head*/}\n                <a.Shape ref={ref} stroke={4} translate={{ x: -7, y: -4 }} color={color_tint} fill /> {/*left ear*/}\n                <a.Shape ref={ref} stroke={4} translate={{ x: 7, y: -4 }} color={color_tint} fill /> {/*right ear*/}\n                {/*<Eye /> left eye*/}\n                <a.Ellipse stroke={0.5} diameter={1.5} quarters={2} translate={{ x: -2.2, y: -1, z: 5 }} rotate={{ z: TAU - TAU / 4 }} color=\"#241d19\" /> {/*left eye*/}\n                {/*<Eye translate={{ x: 2.2, z: 6.8 }} /> right eye*/}\n                <a.Ellipse stroke={0.5} diameter={1.5} quarters={2} translate={{ x: 2.2, y: -1, z: 5 }} rotate={{ z: TAU - TAU / 4 }} color=\"#241d19\" /> {/*right eye*/}\n                <a.Shape height={3} width={2} ref={ref} scale={size} translate={{ y: 2.5, z: 6.8 }} rotate={{ z: TAU / 4 }} closed color=\"#b08b74\" stroke={6} fill /> {/*mouth*/}\n                <a.Shape height={1.3} width={1} ref={ref} scale={size} translate={{ y: 2, z: 9 }} rotate={{ z: TAU / 4 }} closed color=\"#241d19\" stroke={3} fill> {/*nose*/}\n                    <a.Ellipse height={.1} width={.05} ref={ref} translate={{ x: -.5, y: 0, z: 0 }} color=\"white\" fill />\n                </a.Shape>\n                <Ellipse diameter={1} translate={{ x: -3.5, y: 1.5, z: 6.5 }} rotate={{ z: TAU / 4 }} closed color=\"indianred\" stroke={0.5} fill /> {/*left blush*/}\n                <Ellipse diameter={1} translate={{ x: 3.5, y: 1.5, z: 6.5 }} rotate={{ z: TAU / 4 }} closed color=\"indianred\" stroke={0.5} fill /> {/*left right*/}\n                <a.Ellipse height={7} width={4} ref={ref} stroke={14} translate={{ x: 0, y: 13 }} color={color} fill /> {/*body*/}\n                <a.Ellipse height={6} width={1.5} ref={ref} stroke={5} translate={{ x: 6, y: 8, z: 5 }} rotate={{ z: TAU / (up ? -6 : -7), y: TAU / -8 }} color={color_tint} fill /> {/*left arm*/}\n                <a.Ellipse height={6} width={1.5} ref={ref} stroke={5} translate={{ x: -6, y: 8, z: 5 }} rotate={{ z: TAU / (up ? 6 : 7), y: TAU / 8 }} color={color_tint} fill /> {/*right arm*/}\n\n            </a.Shape>\n            <a.Ellipse height={4} width={2} ref={ref} stroke={7} translate={{ x: 6, y: 21, z: 5 }} rotate={{ x: TAU / 4 }} color={color_tint} fill /> {/*left leg*/}\n            <a.Ellipse height={4} width={2} ref={ref} stroke={7} translate={{ x: -6, y: 21, z: 5 }} rotate={{ x: TAU / 4 }} color={color_tint} fill /> {/*right leg*/}\n\n        </a.Shape>\n    );\n}\n\n\n/** --- Delegate types of bear based on boolean ---------------------------------------- */\nfunction Bear(props) {\n    const { templateStore } = props;\n\n    let bear;\n    if (templateStore.healthBool) {\n        bear = PlayBear();\n        return bear;\n    } else if (templateStore.eatBool) {\n        bear = FeedBear();\n        return bear;\n    } else if (templateStore.sleepBool) {\n        bear = SleepBear();\n        return bear;\n    } else if (templateStore.cleanBool) {\n        bear = BatheBear();\n        return bear;\n    } else if (templateStore.breatheBool) {\n        bear = BreatheBear();\n        return bear;\n    } else if (templateStore.petBool) {\n        bear = PetBear();\n        return bear;\n    } else {\n        bear = NormalBear(templateStore);\n        return bear;\n    }\n}\n\n\nexport default observer(Bear);","/Users/chui/Documents/test/bear-buddies/frontend/src/components/App.jsx",["111","112"],"import React, { Component } from \"react\";\nimport { observer } from \"mobx-react\";\nimport '../App.css'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport Home from '../pages';\nimport SignIn from '../pages/SignIn'\nimport SignUp from '../pages/SignUp'\nimport RootStore from \"../models/RootStore\";\nimport {RootStoreProvider} from \"../models/RootStoreContext\"\nimport { auth } from \"../firebase\"\nimport PrivateRoute from \"../components/PrivateRoute\"\nimport PublicRoute from \"./PublicRoute\"\nimport bear from \"../assets/bear.jpg\";\n\n\n\nconst rootStore = RootStore.create()\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      authenticated: false,\n      loading: true\n    }\n  }\n\n  componentDidMount() {\n    auth.onAuthStateChanged((user) => {\n      console.log(user);\n      if (user) {\n        this.setState({\n          authenticated: true,\n          loading: false,\n        });\n      } else {\n        this.setState({\n          authenticated: false,\n          loading: false,\n        });\n      }\n    });\n  }\n\n  render() {\n    return this.state.loading === true ? <h2>Loading...</h2> : (\n      <div style={{backgroundImage: `url(${bear})`, height: '100%'}}>\n        <RootStoreProvider value={rootStore}>\n          <Router>\n            <Switch>\n              <PublicRoute path='/signin' component={SignIn} authenticated={this.state.authenticated} exact={true} user={this.state.user}/>\n              <PublicRoute path='/signup' component={SignUp} authenticated={this.state.authenticated} exact={true} user={this.state.user}/>\n              <PrivateRoute path='/' component={Home} authenticated={this.state.authenticated} user={this.state.user}/>\n            </Switch>\n          </Router>\n        </RootStoreProvider>\n      </div>\n    );\n  }\n}\n\nexport default observer(App);\n","/Users/chui/Documents/test/bear-buddies/frontend/src/firebase.js",[],"/Users/chui/Documents/test/bear-buddies/frontend/src/components/PrivateRoute.js",[],"/Users/chui/Documents/test/bear-buddies/frontend/src/components/PublicRoute.js",[],"/Users/chui/Documents/test/bear-buddies/frontend/src/models/RootStoreContext.js",[],"/Users/chui/Documents/test/bear-buddies/frontend/src/models/RootStore.js",[],"/Users/chui/Documents/test/bear-buddies/frontend/src/pages/SignIn.js",["113","114","115","116","117","118"],"\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Link } from 'react-router-dom';\nimport { auth } from '../firebase';\nimport forest1 from \"../assets/forest.jpg\"\nimport forest2 from \"../assets/fall-forest.jpg\"\nimport forest3 from \"../assets/forest1.jpg\"\nimport forest4 from \"../assets/forest2.png\"\nimport forest5 from \"../assets/night.jpg\"\nimport bear from \"../assets/bear.jpg\"\nimport bear2 from \"../assets/bear2.jpg\"\n\nconst styles = (theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n});\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      email: '',\n      pass: ''\n    }\n\n    this.handleEmail = this.handleEmail.bind(this);\n    this.handlePass = this.handlePass.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleEmail(event) {\n    this.setState({email: event.target.value});\n  }\n\n  handlePass(event) {\n    this.setState({pass: event.target.value});\n  }\n\n  handleSubmit(event) {\n    auth.signInWithEmailAndPassword(this.state.email, this.state.pass)\n      .then((user) => {\n        \n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    event.preventDefault();\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div style={{backgroundImage: `url(${bear})`, height: '500px'}}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <br/>\n        <div className={classes.paper} style={{backgroundColor: 'rgba(255,255,255,0.6)', padding:'25px', borderRadius:'20px'}}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.form} onSubmit={this.handleSubmit} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={this.handleEmail}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={this.handlePass}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Link to='/signup'>\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n        <Box mt={8}>\n        </Box>\n      </Container>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(SignIn);","/Users/chui/Documents/test/bear-buddies/frontend/src/pages/SignUp.js",["119"],"\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Link } from 'react-router-dom';\nimport { auth } from '../firebase';\nimport axios from 'axios';\nimport bear2 from \"../assets/bear2.jpg\"\n\n\nconst styles = (theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.secondary,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n});\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      email: '',\n      pass: '',\n      animal: ''\n    }\n\n    this.handleEmail = this.handleEmail.bind(this);\n    this.handlePass = this.handlePass.bind(this);\n    this.handleAnimal = this.handleAnimal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleEmail(event) {\n    this.setState({email: event.target.value});\n  }\n\n  handlePass(event) {\n    this.setState({pass: event.target.value});\n  }\n\n  handleAnimal(event) {\n    this.setState({animal: event.target.value});\n  }\n\n  handleSubmit(event) {\n    auth.createUserWithEmailAndPassword(this.state.email, this.state.pass)\n      .then((user) => {\n        axios({\n          method: 'post',\n          url: '/api/',\n          data: {\n            requesterID: user.user.uid,\n            level: 1,\n            experience: 0,\n            animalName: this.state.animal,\n            fullness: 100,\n            happiness: 100,\n            cleanliness: 100,\n            energy: 100,\n            calmness: 100,\n            health: 100\n          }\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    event.preventDefault();\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <br/>\n        <div className={classes.paper} style={{backgroundColor: 'rgba(255,255,255,0.6)', padding:'25px', borderRadius:'20px'}}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <form className={classes.form} onSubmit={this.handleSubmit} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={this.handleEmail}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={this.handlePass}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"animal name\"\n              label=\"Animal Name\"\n              id=\"animal\"\n              onChange={this.handleAnimal}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign Up\n            </Button>\n            <Grid container>\n              <Grid item>\n              <Link to='/signin'>\n                  {\"Have an account? Sign In\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n        <Box mt={8}>\n        </Box>\n      </Container>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(SignUp);","/Users/chui/Documents/test/bear-buddies/frontend/src/pages/index.js",["120","121","122","123","124","125"],"import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Landing from \"./landing\"\nimport MainPage from \"./mainPage\"\nimport { FaPaw } from \"react-icons/fa\";\nimport forest1 from \"../assets/forest.jpg\"\nimport forest2 from \"../assets/fall-forest.jpg\"\nimport forest3 from \"../assets/forest1.jpg\"\nimport forest4 from \"../assets/forest2.png\"\nimport forest5 from \"../assets/night.jpg\"\nimport bear from \"../assets/bear.jpg\"\nimport bear2 from \"../assets/bear2.jpg\"\n\n\nconst Home = () => {\n  return (\n  <div className=\"Background\" style={{backgroundImage: `url(${forest4})`}}>\n    <div className=\"header\"> \n      <div style={{height: 4}}></div>\n      <div className = \"labelbg\">\n        <p className = \"labell\"><FaPaw/> bear - buddies <FaPaw/></p>\n      </div>\n    </div>\n    <div className=\"InnerApp\" style={{backgroundImage: `url(${forest2})`}}> \n      <Switch>\n        <Route path='/else' component={Landing} />\n        <Route path='/main' component={MainPage} />\n        <Route path='/' component={MainPage} />\n      </Switch>\n    </div>\n  </div>\n  );\n};\n\nexport default Home;\n","/Users/chui/Documents/test/bear-buddies/frontend/src/models/Template.js",[],"/Users/chui/Documents/test/bear-buddies/frontend/src/pages/landing.js",[],"/Users/chui/Documents/test/bear-buddies/frontend/src/pages/mainPage.js",["126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143"],"/Users/chui/Documents/test/bear-buddies/frontend/src/components/Logout.js",[],{"ruleId":"144","severity":1,"message":"145","line":5,"column":8,"nodeType":"146","messageId":"147","endLine":5,"endColumn":12},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"144","severity":1,"message":"152","line":2,"column":26,"nodeType":"146","messageId":"147","endLine":2,"endColumn":37},{"ruleId":"144","severity":1,"message":"153","line":2,"column":50,"nodeType":"146","messageId":"147","endLine":2,"endColumn":57},{"ruleId":"144","severity":1,"message":"154","line":46,"column":11,"nodeType":"146","messageId":"147","endLine":46,"endColumn":19},{"ruleId":"144","severity":1,"message":"155","line":47,"column":13,"nodeType":"146","messageId":"147","endLine":47,"endColumn":15},{"ruleId":"144","severity":1,"message":"156","line":47,"column":17,"nodeType":"146","messageId":"147","endLine":47,"endColumn":19},{"ruleId":"144","severity":1,"message":"157","line":47,"column":21,"nodeType":"146","messageId":"147","endLine":47,"endColumn":23},{"ruleId":"144","severity":1,"message":"158","line":47,"column":25,"nodeType":"146","messageId":"147","endLine":47,"endColumn":27},{"ruleId":"144","severity":1,"message":"155","line":190,"column":13,"nodeType":"146","messageId":"147","endLine":190,"endColumn":15},{"ruleId":"144","severity":1,"message":"156","line":190,"column":17,"nodeType":"146","messageId":"147","endLine":190,"endColumn":19},{"ruleId":"144","severity":1,"message":"157","line":190,"column":21,"nodeType":"146","messageId":"147","endLine":190,"endColumn":23},{"ruleId":"144","severity":1,"message":"158","line":190,"column":25,"nodeType":"146","messageId":"147","endLine":190,"endColumn":27},{"ruleId":"144","severity":1,"message":"154","line":262,"column":11,"nodeType":"146","messageId":"147","endLine":262,"endColumn":19},{"ruleId":"144","severity":1,"message":"155","line":264,"column":13,"nodeType":"146","messageId":"147","endLine":264,"endColumn":15},{"ruleId":"144","severity":1,"message":"156","line":264,"column":17,"nodeType":"146","messageId":"147","endLine":264,"endColumn":19},{"ruleId":"144","severity":1,"message":"157","line":264,"column":21,"nodeType":"146","messageId":"147","endLine":264,"endColumn":23},{"ruleId":"144","severity":1,"message":"158","line":264,"column":25,"nodeType":"146","messageId":"147","endLine":264,"endColumn":27},{"ruleId":"144","severity":1,"message":"155","line":326,"column":13,"nodeType":"146","messageId":"147","endLine":326,"endColumn":15},{"ruleId":"144","severity":1,"message":"156","line":326,"column":17,"nodeType":"146","messageId":"147","endLine":326,"endColumn":19},{"ruleId":"144","severity":1,"message":"157","line":326,"column":21,"nodeType":"146","messageId":"147","endLine":326,"endColumn":23},{"ruleId":"144","severity":1,"message":"158","line":326,"column":25,"nodeType":"146","messageId":"147","endLine":326,"endColumn":27},{"ruleId":"144","severity":1,"message":"154","line":371,"column":11,"nodeType":"146","messageId":"147","endLine":371,"endColumn":19},{"ruleId":"144","severity":1,"message":"155","line":373,"column":13,"nodeType":"146","messageId":"147","endLine":373,"endColumn":15},{"ruleId":"144","severity":1,"message":"156","line":373,"column":17,"nodeType":"146","messageId":"147","endLine":373,"endColumn":19},{"ruleId":"144","severity":1,"message":"157","line":373,"column":21,"nodeType":"146","messageId":"147","endLine":373,"endColumn":23},{"ruleId":"144","severity":1,"message":"158","line":373,"column":25,"nodeType":"146","messageId":"147","endLine":373,"endColumn":27},{"ruleId":"144","severity":1,"message":"154","line":440,"column":11,"nodeType":"146","messageId":"147","endLine":440,"endColumn":19},{"ruleId":"144","severity":1,"message":"155","line":442,"column":13,"nodeType":"146","messageId":"147","endLine":442,"endColumn":15},{"ruleId":"144","severity":1,"message":"156","line":442,"column":17,"nodeType":"146","messageId":"147","endLine":442,"endColumn":19},{"ruleId":"144","severity":1,"message":"157","line":442,"column":21,"nodeType":"146","messageId":"147","endLine":442,"endColumn":23},{"ruleId":"144","severity":1,"message":"158","line":442,"column":25,"nodeType":"146","messageId":"147","endLine":442,"endColumn":27},{"ruleId":"144","severity":1,"message":"154","line":523,"column":11,"nodeType":"146","messageId":"147","endLine":523,"endColumn":19},{"ruleId":"144","severity":1,"message":"155","line":525,"column":13,"nodeType":"146","messageId":"147","endLine":525,"endColumn":15},{"ruleId":"144","severity":1,"message":"156","line":525,"column":17,"nodeType":"146","messageId":"147","endLine":525,"endColumn":19},{"ruleId":"144","severity":1,"message":"157","line":525,"column":21,"nodeType":"146","messageId":"147","endLine":525,"endColumn":23},{"ruleId":"144","severity":1,"message":"158","line":525,"column":25,"nodeType":"146","messageId":"147","endLine":525,"endColumn":27},{"ruleId":"144","severity":1,"message":"159","line":4,"column":43,"nodeType":"146","messageId":"147","endLine":4,"endColumn":48},{"ruleId":"144","severity":1,"message":"160","line":4,"column":50,"nodeType":"146","messageId":"147","endLine":4,"endColumn":58},{"ruleId":"144","severity":1,"message":"161","line":15,"column":8,"nodeType":"146","messageId":"147","endLine":15,"endColumn":15},{"ruleId":"144","severity":1,"message":"162","line":16,"column":8,"nodeType":"146","messageId":"147","endLine":16,"endColumn":15},{"ruleId":"144","severity":1,"message":"163","line":17,"column":8,"nodeType":"146","messageId":"147","endLine":17,"endColumn":15},{"ruleId":"144","severity":1,"message":"164","line":18,"column":8,"nodeType":"146","messageId":"147","endLine":18,"endColumn":15},{"ruleId":"144","severity":1,"message":"165","line":19,"column":8,"nodeType":"146","messageId":"147","endLine":19,"endColumn":15},{"ruleId":"144","severity":1,"message":"166","line":21,"column":8,"nodeType":"146","messageId":"147","endLine":21,"endColumn":13},{"ruleId":"144","severity":1,"message":"166","line":16,"column":8,"nodeType":"146","messageId":"147","endLine":16,"endColumn":13},{"ruleId":"144","severity":1,"message":"167","line":2,"column":27,"nodeType":"146","messageId":"147","endLine":2,"endColumn":33},{"ruleId":"144","severity":1,"message":"161","line":6,"column":8,"nodeType":"146","messageId":"147","endLine":6,"endColumn":15},{"ruleId":"144","severity":1,"message":"163","line":8,"column":8,"nodeType":"146","messageId":"147","endLine":8,"endColumn":15},{"ruleId":"144","severity":1,"message":"165","line":10,"column":8,"nodeType":"146","messageId":"147","endLine":10,"endColumn":15},{"ruleId":"144","severity":1,"message":"168","line":11,"column":8,"nodeType":"146","messageId":"147","endLine":11,"endColumn":12},{"ruleId":"144","severity":1,"message":"166","line":12,"column":8,"nodeType":"146","messageId":"147","endLine":12,"endColumn":13},{"ruleId":"144","severity":1,"message":"169","line":25,"column":8,"nodeType":"146","messageId":"147","endLine":25,"endColumn":13},{"ruleId":"144","severity":1,"message":"170","line":26,"column":8,"nodeType":"146","messageId":"147","endLine":26,"endColumn":16},{"ruleId":"144","severity":1,"message":"171","line":27,"column":8,"nodeType":"146","messageId":"147","endLine":27,"endColumn":12},{"ruleId":"144","severity":1,"message":"172","line":71,"column":10,"nodeType":"146","messageId":"147","endLine":71,"endColumn":13},{"ruleId":"144","severity":1,"message":"173","line":136,"column":10,"nodeType":"146","messageId":"147","endLine":136,"endColumn":15},{"ruleId":"144","severity":1,"message":"174","line":136,"column":17,"nodeType":"146","messageId":"147","endLine":136,"endColumn":25},{"ruleId":"175","severity":1,"message":"176","line":138,"column":18,"nodeType":"177","endLine":138,"endColumn":53},{"ruleId":"175","severity":1,"message":"176","line":139,"column":1,"nodeType":"177","endLine":139,"endColumn":37},{"ruleId":"175","severity":1,"message":"176","line":140,"column":1,"nodeType":"177","endLine":140,"endColumn":35},{"ruleId":"175","severity":1,"message":"176","line":141,"column":1,"nodeType":"177","endLine":141,"endColumn":36},{"ruleId":"175","severity":1,"message":"176","line":142,"column":1,"nodeType":"177","endLine":142,"endColumn":36},{"ruleId":"175","severity":1,"message":"176","line":143,"column":1,"nodeType":"177","endLine":143,"endColumn":35},{"ruleId":"175","severity":1,"message":"176","line":144,"column":1,"nodeType":"177","endLine":144,"endColumn":36},{"ruleId":"175","severity":1,"message":"176","line":145,"column":1,"nodeType":"177","endLine":145,"endColumn":38},{"ruleId":"175","severity":1,"message":"176","line":146,"column":1,"nodeType":"177","endLine":146,"endColumn":36},{"ruleId":"144","severity":1,"message":"178","line":149,"column":9,"nodeType":"146","messageId":"147","endLine":149,"endColumn":16},{"ruleId":"144","severity":1,"message":"179","line":155,"column":9,"nodeType":"146","messageId":"147","endLine":155,"endColumn":20},{"ruleId":"180","severity":1,"message":"181","line":217,"column":6,"nodeType":"182","endLine":217,"endColumn":182,"suggestions":"183"},"no-unused-vars","'Bear' is defined but never used.","Identifier","unusedVar","no-native-reassign",["184"],"no-negated-in-lhs",["185"],"'RoundedRect' is defined but never used.","'Polygon' is defined but never used.","'rotation' is assigned a value but never used.","'la' is assigned a value but never used.","'ll' is assigned a value but never used.","'ra' is assigned a value but never used.","'rl' is assigned a value but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","'forest1' is defined but never used.","'forest2' is defined but never used.","'forest3' is defined but never used.","'forest4' is defined but never used.","'forest5' is defined but never used.","'bear2' is defined but never used.","'Router' is defined but never used.","'bear' is defined but never used.","'Modal' is defined but never used.","'Backdrop' is defined but never used.","'Fade' is defined but never used.","'Guy' is defined but never used.","'showB' is assigned a value but never used.","'setShowB' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'classes' is assigned a value but never used.","'handleClose' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getData', 'lookup', and 'updateData'. Either include them or remove the dependency array.","ArrayExpression",["186"],"no-global-assign","no-unsafe-negation",{"desc":"187","fix":"188"},"Update the dependencies array to be: [templateStore.full, templateStore.clean, templateStore.energy, templateStore.happy, templateStore.calm, templateStore.health, templateStore.levelProgress, templateStore.level, lookup, getData, updateData]",{"range":"189","text":"190"},[7992,8168],"[templateStore.full, templateStore.clean, templateStore.energy, templateStore.happy, templateStore.calm, templateStore.health, templateStore.levelProgress, templateStore.level, lookup, getData, updateData]"]